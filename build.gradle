plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.choongang'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//스프링부트
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//타임리프
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'

	//롬복
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//DB
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
	implementation 'com.oracle.database.nls:orai18n:23.3.0.23.09'

	testRuntimeOnly 'com.h2database:h2' //버젼은 알아서 적용하기 떄문에 지워준다 또 테스트런타임 온리로 변경
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' //뒤에는 자카르타 추가
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta' //앞에 애노테이션 프로세서로 변경 뒤에는 자카르타 추가

	//자카르타
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api' //위 2개를 실행하기 위해 두가지 적어서 적용

	// 모델 매퍼 - 서로 다른 클래스의 값을 한 번에 복사하게 도와주는 라이브러리
	implementation 'org.modelmapper:modelmapper:3.2.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}

